#!/usr/bin/env bash
#Filename: str-test
#Taken from abs on tldp.org

# Using   if [ ... ]

# If a string has not been initialized, it has no defined value.
# This state is called "null" (not the same as zero!).

if [ -n $string1 ]
then
	echo "String \"string1\" is not null."
else
	echo "String \"string1\" is null."
fi

echo

if [ -n "$string1" ]
then
	echo "String \"string1\" is not null."
else
	echo "String \"string1\" is null."
fi

echo

if [ $string1 ]
then
	echo "String \"string1\" is not null."
else
	echo "String \"string1\" is null."
fi

# The [ ... ] test operator alone detects whether the string is null.
# However it is good practice to quote it (if [ "$string1" ]).
#
# As Stephane Chazelas points out,
#    if [ $string1 ]    has one argument, "]"
#    if [ "$string1" ]  has two arguments, the empty "$string1" and "]" 

echo

string1=initialized

if [ $string1 ]  # Again, $string1 stands unquoted.
then
	echo "String \"string1\" is not null."
else
	echo "String \"string1\" is null."
fi # Again, gives correct result.
# Still, it is better to quote it ("$string1"), because . . .

echo

string1="a = b"

if [ $string1 ]
then
	echo "String \"string1\" is not null."
else
	echo "String \"string1\" is null.
fi	# Not quoting "$string1" now gives wrong result!

exit 0
